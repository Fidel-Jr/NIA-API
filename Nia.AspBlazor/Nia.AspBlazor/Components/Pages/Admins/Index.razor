@page "/admins"
@using Nia.Domain.Entities
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
<h3>Users</h3>
@inject HttpClient Http

<div class="d-flex flex-column flex-md-row align-items-center justify-content-between p-4 mb-4 bg-white border rounded shadow-sm">
    <div class="d-flex flex-column flex-md-row gap-3 w-100 w-md-auto">

        <!-- Card: Admins -->
        <div class="d-flex align-items-center p-3 bg-light rounded shadow-sm" style="width: 10rem;">
            <div class="me-3 p-2 bg-primary text-white rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                <!-- Icon: Admin -->
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M17 20h5v-2a4 4 0 0 0-3-3.87M9 20H4v-2a4 4 0 0 1 3-3.87M12 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zm6 8v-2a4 4 0 0 0-3-3.87M6 20v-2a4 4 0 0 1 3-3.87" />
                </svg>
            </div>
            <div>
                <p class="mb-1 text-muted small">Admins</p>
                <p class="fw-semibold mb-0">2</p>
            </div>
        </div>

        <!-- Card: Users -->
        <div class="d-flex align-items-center p-3 bg-light rounded shadow-sm" style="width: 10rem;">
            <div class="me-3 p-2 bg-warning text-white rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M17 20h5v-2a4 4 0 0 0-3-3.87M9 20H4v-2a4 4 0 0 1 3-3.87M12 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zm6 8v-2a4 4 0 0 0-3-3.87M6 20v-2a4 4 0 0 1 3-3.87" />
                </svg>
            </div>
            <div>
                <p class="mb-1 text-muted small">Users</p>
                <p class="fw-semibold mb-0">1</p>
            </div>
        </div>

        <!-- Add Admin Button -->
        <RadzenButton Text="Add new"
                      Icon="add"
                      ButtonStyle="ButtonStyle.Success"
                      Style="background-color: #228c22; color: white; display: flex; align-items: center;"
                      Click="@(() => NavigationManager.NavigateTo("admin/create"))" />
        @* <a href="./admin-accounts/admin-category.html" class="btn d-flex align-items-center" style="background-color: #228c22; color: white;">
            
        </a> *@

    </div>
</div>
<h3 class="mb-4">Admin Accounts</h3>
<RadzenCard Style="padding: 20px">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <RadzenTextBox Placeholder="Search..." Style="width: 200px" @bind-Value="searchTerm" />
        <RadzenButton Text="Add Admin" Icon="add_circle" Style="background-color:#228c22;color:white;" Click="@(() => NavigationManager.NavigateTo("admin/create"))" />
        @* <div class="input-group w-auto">
            <span class="input-group-text">
                <RadzenIcon Icon="search" />
            </span>
            <RadzenTextBox Placeholder="Search..." Style="width: 200px" />
        </div> *@
    </div>

    <RadzenDataGrid TItem="User" 
                    Data="@admins" 
                    RowSelect="OnRowSelect" 
                    Editable="true" 
                    AllowPaging="true" 
                    ColumnWidth="200px" 
                    PageSize="5"
                    PagerHorizontalAlign="@pagerHorizontalAlign">
        <Columns>
            <RadzenDataGridColumn TItem="User" Property="Id" Title="Id" />
            <RadzenDataGridColumn TItem="User" Property="ImagePath" Title="Image" />
            <RadzenDataGridColumn TItem="User" Property="FullName" Title="Name" />
            <RadzenDataGridColumn TItem="User" Property="Username" Title="Username" />
            <RadzenDataGridColumn TItem="User" Property="Role" Title="Role" />
            <RadzenDataGridColumn TItem="User" Title="Actions">
                <Template Context="admin">
                    <RadzenButton Icon="edit" Size="ButtonSize.Small" Style="margin-right:5px; background-color: #228c22;" Click="@(e => OnEditRow(e, admin.Id, "admin"))" />
                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Click="@(e => DeleteRow(e, admin.Id))" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>

    <RadzenDialog />
</RadzenCard>

<h3 class="mb-4 mt-4">User Accounts</h3>
<RadzenCard Style="padding: 20px">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <RadzenTextBox Placeholder="Search..." Style="width: 200px" @bind-Value="searchTerm" />
        <RadzenButton Text="Add User" Icon="add_circle" Style="background-color:#228c22;color:white;" Click="@(() => NavigationManager.NavigateTo("admin/user/create"))" />
    </div>

    <RadzenDataGrid TItem="User" Data="@users" RowSelect="OnRowSelect" Editable="true" AllowPaging="true" ColumnWidth="200px" PageSize="5">
        <Columns>
            <RadzenDataGridColumn TItem="User" Property="Id" Title="Id" />
            <RadzenDataGridColumn TItem="User" Property="ImagePath" Title="Image" />
            <RadzenDataGridColumn TItem="User" Property="FullName" Title="Name" />
            <RadzenDataGridColumn TItem="User" Property="Username" Title="Username" />
            <RadzenDataGridColumn TItem="User" Property="Role" Title="Role" />
            <RadzenDataGridColumn TItem="User" Context="user" Title="Actions">
                <Template Context="user">
                    <RadzenButton Icon="edit" Size="ButtonSize.Small" Style="margin-right:5px; background-color: #228c22;" Click="@(e => OnEditRow(e, user.Id, "user"))" />
                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Click="@(e => DeleteRow(e, user.Id))" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenCard>



@code {
    IList<User> selectedItems = new List<User>();
    private string? searchTerm;
    HorizontalAlign pagerHorizontalAlign = HorizontalAlign.Right;
    private List<User>? users { get; set; }
    private List<User>? admins = new();


    protected override async Task OnInitializedAsync()
    {
        admins = await Http.GetFromJsonAsync<List<User>>("api/users/all-admins")
                                ?? new List<User>();
        users = await Http.GetFromJsonAsync<List<User>>("api/users/all-users")
                                ?? new List<User>();
        StateHasChanged(); // Forces UI update
    }
    private async Task LoadUsers()
    {
        admins = await Http.GetFromJsonAsync<List<User>>("api/users/all-admins");

        users = await Http.GetFromJsonAsync<List<User>>("api/users/all-users")
                                ?? new List<User>();
    }

    private void AddUser()
    {
        // Placeholder for Add logic
    }

    private void OnRowSelect(User user)
    {
        // Placeholder for row select logic
    }

    void OnEditRow(MouseEventArgs args, int id, string role)
    {
        NavigationManager.NavigateTo($"/{role}/edit/{id}");
    }

    private async Task DeleteRow(MouseEventArgs args, int id)
    {
        var admins = await Http.DeleteAsync($"/api/users/{id}");
        if (admins.IsSuccessStatusCode)
        {
            Console.WriteLine($"User {id} deleted successfully.");
            await LoadUsers(); // 👈 Refetch the data
            StateHasChanged(); // Update the UI
        }
    }
}
